---
description: 
globs: 
alwaysApply: true
---
# 组件命名规范

## 文件命名规则
- 组件文件名使用 **PascalCase**（首字母大写的驼峰式命名法）
- 单文件组件的文件扩展名为 `.vue`

## 组件命名前缀/后缀约定
按组件类型添加前缀或后缀：

| 类型 | 前缀/后缀 | 示例 |
|------|-----------|------|
| 基础组件 | `Base` 前缀 | `BaseButton.vue`, `BaseIcon.vue` |
| 全局通用组件 | `The` 前缀 | `TheHeader.vue`, `TheFooter.vue` |
| 单例组件 | `The` 前缀 | `TheNavigation.vue` |
| 页面组件 | `View` 后缀 | `HomeView.vue`, `UserView.vue` |
| 布局组件 | `Layout` 后缀 | `DefaultLayout.vue`, `AuthLayout.vue` |
| 父组件紧密耦合的子组件 | 父组件名+子组件描述 | `UserListItem.vue`, `TodoListItem.vue` |

## 组件名称与功能匹配
- 组件名称应当表达其功能和用途，避免使用缩写
- 使用多个单词命名组件，避免与HTML元素冲突（如使用 `TodoItem` 而非 `Todo`）
- 组件名应当具有一定的自解释性，无需额外注释即可理解其用途

## 在模板中使用组件
组件使用时应采用 PascalCase 或 kebab-case：

```html
<!-- 在模板中使用 PascalCase -->
<UserProfile />

<!-- 或使用 kebab-case -->
<user-profile></user-profile>
```

## 组件注册
- 全局组件：应限制使用，仅适用于极其通用的组件
- 局部组件：推荐在使用组件的文件中通过 import 导入并在 components 选项中注册

## 避免的命名方式
- 避免非描述性名称（如 `MyComponent`, `Component1`）
- 避免缩写（如 `UPrf` 而非 `UserProfile`）
- 避免过于笼统的名称（如 `Common`, `Utils`）
